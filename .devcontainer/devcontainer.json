{
  "name": "Shift Scheduler Dev Environment",
  "build": {
    "dockerfile": "Dockerfile",
    "context": ".."
  },
  "workspaceFolder": "/workspace",
  // Features to add to the dev container
  "features": {
    "ghcr.io/devcontainers/features/docker-in-docker:2": {
      "version": "latest",
      "enableNonRootDocker": "true"
    },
    "ghcr.io/devcontainers/features/git:1": {
      "version": "latest"
    }
  },
  // Configure tool-specific properties
  "customizations": {
    "vscode": {
      "settings": {
        "python.defaultInterpreterPath": "/workspace/.venv/bin/python",
        "python.linting.enabled": true,
        "python.linting.pylintEnabled": false,
        "python.linting.flake8Enabled": true,
        "python.formatting.provider": "black",
        "python.sortImports.args": [
          "--profile",
          "black"
        ],
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
          "source.organizeImports": true
        },
        "files.exclude": {
          "**/__pycache__": true,
          "**/.pytest_cache": true,
          "**/*.pyc": true
        }
      },
      "extensions": [
        "ms-python.python",
        "ms-python.black-formatter",
        "ms-python.isort",
        "ms-python.flake8",
        "ms-python.mypy-type-checker",
        "charliermarsh.ruff",
        "ms-vscode.docker",
        "ms-azuretools.vscode-docker",
        "redhat.vscode-yaml",
        "ms-vscode.makefile-tools",
        "github.copilot",
        "github.copilot-chat",
        "ms-python.debugpy",
        "humao.rest-client"
      ]
    }
  },
  // Use 'forwardPorts' to make a list of ports inside the container available locally
  "forwardPorts": [
    8081
  ],
  "portsAttributes": {
    "8081": {
      "label": "FastAPI Server",
      "onAutoForward": "notify"
    }
  },
  // Step-by-step setup with error handling
  "postCreateCommand": "bash -c 'rm -f uv.lock && echo \"Installing dependencies...\" && uv sync --no-install-project && echo \"ðŸŽ‰ Dev Container is ready! Run: make run\"'",
  // Use 'postStartCommand' to run commands after the container starts
  "postStartCommand": "git config --global --add safe.directory /workspace",
  // Comment out to connect as root instead
  "remoteUser": "vscode",
  // Mount the workspace
  "mounts": [
    "source=${localWorkspaceFolder},target=/workspace,type=bind,consistency=cached"
  ],
  "remoteEnv": {
    "SSH_AUTH_SOCK": "${localEnv:SSH_AUTH_SOCK}",
    "JOB_STORAGE_TYPE": "filesystem",
    "JOB_STORAGE_DIR": "/workspace/job_storage"
  }
}