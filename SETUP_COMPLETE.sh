#!/bin/bash

# スクリプト実行権限を付与
chmod +x setup-docker-apple-silicon.sh

echo "🍎 Apple Silicon Mac対応のShift Scheduler Dev Container環境が完成しました！"
echo "================================================================================"
echo ""
echo "📁 作成されたファイル:"
echo "├── .devcontainer/          # Dev Container設定"
echo "├── .vscode/               # VS Code設定・デバッグ・拡張機能"
echo "├── api-test.http          # REST APIテスト"
echo "├── setup-docker-apple-silicon.sh  # Apple Silicon最適化スクリプト"
echo "├── DEV_CONTAINER_README.md        # Dev Container詳細ガイド"
echo "└── その他のプロジェクトファイル"
echo ""
echo "🚀 開発環境起動方法:"
echo ""
echo "【方法1: VS Code Dev Container（推奨）】"
echo "1. VS Codeでプロジェクトを開く:"
echo "   code /projects/shared/shift-scheduler"
echo ""
echo "2. Command Palette (Cmd+Shift+P) を開いて以下を実行:"
echo "   'Dev Containers: Reopen in Container'"
echo ""
echo "3. Dev Container起動後、ターミナルで:"
echo "   make setup  # 依存関係インストール"
echo "   make run    # アプリケーション起動"
echo ""
echo "【方法2: コマンドライン】"
echo "1. Docker環境セットアップ:"
echo "   ./setup-docker-apple-silicon.sh"
echo ""
echo "2. Dev Container起動:"
echo "   make dev-setup"
echo ""
echo "3. VS Codeで開く:"
echo "   code ."
echo "   # その後 'Dev Containers: Reopen in Container' を実行"
echo ""
echo "🎯 主要機能:"
echo "✅ Apple Silicon (M1/M2/M3) ネイティブサポート"
echo "✅ Timefold Solver完全統合"
echo "✅ VS Code完全統合（デバッグ・テスト・フォーマット）"
echo "✅ 週勤務時間制約・スキルマッチング・休憩時間管理"
echo "✅ REST Client APIテスト"
echo "✅ uvによる超高速パッケージ管理"
echo ""
echo "🔗 アクセスURL（Dev Container起動後）:"
echo "• FastAPI Server: http://localhost:8000"
echo "• Swagger UI: http://localhost:8000/docs"
echo "• ReDoc: http://localhost:8000/redoc"
echo ""
echo "📚 ドキュメント:"
echo "• README.md - 包括的なガイド"
echo "• DEV_CONTAINER_README.md - Dev Container詳細"
echo "• api-test.http - APIテスト例"
echo ""
echo "🛠 よく使うコマンド（Dev Container内）:"
echo "make run      # サーバー起動"
echo "make test     # テスト実行"
echo "make format   # コードフォーマット"
echo "make lint     # コードチェック"
echo "make test-api # API動作確認"
echo ""
echo "🎉 準備完了！素晴らしい開発体験をお楽しみください！"