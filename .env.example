# ==============================================================================
# Shift Scheduler Environment Configuration
# ==============================================================================
# Copy this file to .env and modify the values as needed for your environment

# ==============================================================================
# Application Configuration
# ==============================================================================

# Logging Configuration
# Available levels: DEBUG, INFO, WARN, ERROR, CRITICAL
LOG_LEVEL=INFO

# Solver-specific logging (for Timefold Solver)
# Available levels: DEBUG, INFO, WARN, ERROR
SOLVER_LOG_LEVEL=INFO

# MCP-specific logging (for MCP Solver)
# Available levels: DEBUG, INFO, WARN, ERROR
MCP_LOG_LEVEL=INFO

# ==============================================================================
# Server Configuration
# ==============================================================================

# Port for the main Shift Scheduler API
SHIFT_SCHEDULER_PORT=8081

# Port for the MCP (Model Context Protocol) server
MCP_SERVER_PORT=8082

# Base URL for API communication (used by MCP server)
SHIFT_SCHEDULER_API_URL=http://localhost:8081

# ==============================================================================
# Solver Configuration
# ==============================================================================

# Solver timeout in seconds (how long to spend optimizing)
# Development: 120 seconds (2 minutes)
# Production: 300 seconds (5 minutes) or higher
SOLVER_TIMEOUT_SECONDS=120

# ==============================================================================
# Job Storage Configuration
# ==============================================================================

# Job storage type (currently only 'filesystem' is supported)
JOB_STORAGE_TYPE=filesystem

# Directory where job data is stored (inside container)
JOB_STORAGE_DIR=/app/job_storage

# Host directory for job storage (bind mount)
HOST_JOB_STORAGE_DIR=./job_storage

# ==============================================================================
# Java Configuration
# ==============================================================================

# Java options for the JVM running Timefold Solver
# Development: Basic memory allocation
JAVA_OPTS=-Xmx1g

# Production example (more memory, optimized GC):
# JAVA_OPTS=-Xmx2g -XX:+UseG1GC -XX:+UseStringDeduplication

# ==============================================================================
# Database Configuration (PostgreSQL)
# ==============================================================================

# PostgreSQL connection details
POSTGRES_DB=shiftdb
POSTGRES_USER=shiftuser
POSTGRES_PASSWORD=shiftpass_change_in_production
POSTGRES_PORT=5432

# PostgreSQL initialization arguments
POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C

# ==============================================================================
# Web Server Configuration (Production)
# ==============================================================================

# Nginx reverse proxy ports
NGINX_HTTP_PORT=80
NGINX_HTTPS_PORT=443

# ==============================================================================
# Cache Configuration (Optional)
# ==============================================================================

# Redis cache port (if using cache profile)
REDIS_PORT=6379

# ==============================================================================
# Development vs Production Settings
# ==============================================================================

# For development:
# - Use default values above
# - Enable hot reload with volume mounts
# - Use INFO level logging
# - Shorter solver timeouts for faster feedback

# For production:
# - Set LOG_LEVEL=WARN or ERROR
# - Set SOLVER_LOG_LEVEL=WARN or ERROR
# - Increase SOLVER_TIMEOUT_SECONDS to 300+
# - Use stronger POSTGRES_PASSWORD
# - Configure JAVA_OPTS for production workloads
# - Consider using external storage for HOST_JOB_STORAGE_DIR

# ==============================================================================
# Docker Compose Profiles
# ==============================================================================

# Available profiles:
# - default: shift-scheduler + postgres
# - mcp: includes MCP server
# - nginx: includes Nginx reverse proxy
# - cache: includes Redis cache
#
# Usage examples:
# docker-compose up                           # default services
# docker-compose --profile mcp up            # include MCP server
# docker-compose --profile nginx --profile cache up  # full stack